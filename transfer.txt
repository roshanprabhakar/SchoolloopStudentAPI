package Utilities;

import classtemplates.APLAC;
import classtemplates.APUSH;
import classtemplates.PhysicsAP;

import java.util.HashMap;

public class Main {

    public static final String USERNAME = "nkandlikar096";
    public static final String PASSWORD = "Killershark";

    // example usage, API purposed for providing data to create more methods
    public static void main(String[] args) throws InterruptedException {

        //Scrapes data from Schoolloop to GRADES, fix data collection for apush
        Scraper.writeMap(Scraper.scrapeGradeData(USERNAME, PASSWORD), "GRADES.txt");

        //This HashMap contains all the data from GRADES in the form of <Block name, Block Object>
        //The names contained in this map are exactly as they appear on the school loop dashboard
        //Ignore empty map entry, soley used for comparison
//        HashMap<String, Block> blocks = Scraper.readGradeData("GRADES.txt");

//        APUSH apush = new APUSH(blocks.get(getFromBlocks("US History AP", blocks)));
//        apush.findWeights();

//        apush.analyze();

//        PhysicsAP physics = new PhysicsAP(blocks.get(getFromBlocks("Physics", blocks)));

//        PhysicsAP physics = new PhysicsAP(blocks.get(getFromBlocks("Physics", blocks))); //takes in block to account for downcasting
//        physics.analyze();
//
//        Entry finalExam = new Entry();
//        finalExam.put("Assessment", "Tests Quizzes Final Exam");
//        finalExam.put("Score", new Score(357,525));
//
//        physics.add(finalExam);
//        physics.analyze();

//        APLAC aplac = new APLAC(blocks.get(getFromBlocks("AP Lang/Comp", blocks))); //takes in block to account for downcasting
//        aplac.analyze();
//
//        Entry finalExam = new Entry();
//        finalExam.put("Assessment", "Mastery final exam");
//        finalExam.put("Score", new Score(70,100));
//
//        aplac.add(finalExam);
//        aplac.analyze();

    }

    public static String getFromBlocks(String key, HashMap<String, Block> map) {
        for (String blockTitle : map.keySet()) {
            if (blockTitle.contains(key)) return blockTitle;
        }
        return null;
    }

}
